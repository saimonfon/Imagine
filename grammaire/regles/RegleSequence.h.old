#ifndef REGLE_SEQ_H
#define REGLE_SEQ_H
#include "Regle.h"
#include "../Parser.h"
#include "../condition/ConditionUnique.h"
#include "../condition/ConditionAdj.h"
#include "../condition/ConditionEgal.h"
class Element;
class RegleSequence : public Regle
{
	public :
	RegleSequence(string nom, string type);
	vector<Noeud*> appliquer(Parser* p);
	void init();
	/** Les conditions portant sur le membre droit (par exemple, chaque marche doit mesurer plus de 30 cm).*/
	vector<ConditionUnique*> conditions;
	/** Les conditions d'adjacence entre attributs de deux éléments consécutifs. */
	vector<ConditionAdj*> condSuccAdj;
	/** Les conditions d'égalité entre attributs de deux éléments consécutifs. */
	vector<ConditionEgal*> condSuccEgal;
	private:
	string type;
	string nom;
	set<Element*> elements;
	set<Noeud*> dejaTraites;
	map<ConditionAdj*,map<Polygone*,set<Element*> > > table_debuts;
	map<ConditionAdj*,map<Polygone*,set<Element*> > > table_fins;
	
	//Le void* dans la map peut poser des problèmes (égalité entre pointeurs au lieu d'égalité entre valeurs)
	map<ConditionEgal*,map<void*,set<Element*> > > table_eg_debuts;
	map<ConditionEgal*,map<void*,set<Element*> > > table_eg_fins;
	
};

class Element{
public :
vector<Noeud*> membres;
map<string,void*> att_debut;
map<string,void*> att_fin;
Element(vector<Noeud*> membres, map<string,void*> att_debut, map<string,void*> att_fin);
};
#endif